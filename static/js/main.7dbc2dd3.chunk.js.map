{"version":3,"sources":["components/Button/Button.js","components/Screen/Screen.js","constants/constants.js","redux/actions/actions.js","components/Box/Box.js","auth/auth.js","App.js","redux/reducer/box.js","reportWebVitals.js","redux/reducer/reducer.js","index.js"],"names":["Button","value","icon","handleClick","handleLock","service_mode","locked","locking","className","onClick","Screen","status","message","active","useEffect","LOCKED_STATUS","TEST","UNLOCKED_STATUS","ERROR_STATUS","READY_STATUS","LOCKING_STATUS","UNLOCKING_STATUS","PREVENT_TYPE","SERVICE_STATUS","VALIDATING_STATUS","SET_INACTIVE","SET_ACTIVE","SERIAL_NUMBER","LOCKING_TIME","setLocked","type","t","setAsyncUnLocked","dispatch","setTimeout","setError","setAsyncLocking","Buttons","val","SerialNumber","connect","state","box","useState","boxState","setBoxState","submit","setSubmit","useDispatch","lockTimer","useRef","idleTimer","length","hash","password","CryptoJS","AES","encrypt","JSON","stringify","process","toString","Cookies","set","expires","current","clearTimeout","isLocked","get","e","console","log","decrypt","bytes","parse","enc","Utf8","DecrptPass","currentPassword","stringDecrypt","resetBoxState","remove","fixedVal","join","replace","fetch","then","response","json","data","sn","setInputTimer","clearLockTimer","clearIdleTimer","prevState","map","btn","i","App","Box","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","store","createStore","reducer","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dbc2dd3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = ({\r\n  value,\r\n  icon,\r\n  handleClick,\r\n  handleLock,\r\n  service_mode,\r\n  locked,\r\n  locking,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`btn ${locking ? \"prevent\" : \"\"} `}\r\n      onClick={() =>\r\n        value === \"L\"\r\n          ? service_mode\r\n            ? handleClick(value)\r\n            : locked\r\n            ? null\r\n            : handleLock()\r\n          : value === \"*\" && !service_mode\r\n          ? null\r\n          : handleClick(value)\r\n      }\r\n    >\r\n      <strong className=\"btn-text\">{value}</strong>\r\n      {icon && <span className=\"icon-placeholder\">{icon}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst Screen = ({ status, message, active }) => {\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className={`screen-bar ${active && \"active\"}`}>\r\n      <div className=\"status-bar\">{status ? \"Locked\" : \"Unlocked\"}</div>\r\n      <div className=\"message-bar\">{message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Screen;\r\n","export const LOCKED_STATUS = \"LOCKED_STATUS\";\r\n\r\nexport const TEST = \"TEST\";\r\n\r\nexport const UNLOCKED_STATUS = \"UNLOCKED_STATUS\";\r\n\r\nexport const ERROR_STATUS = \"ERROR_STATUS\";\r\n\r\nexport const READY_STATUS = \"READY_STATUS\";\r\n\r\nexport const LOCKING_STATUS = \"LOCKING_STATUS\";\r\n\r\nexport const UNLOCKING_STATUS = \"UNLOCKING_STATUS\";\r\n\r\nexport const PREVENT_TYPE = \"PREVENT_TYPE\";\r\n\r\nexport const SERVICE_STATUS = \"SERVICE_STATUS\";\r\n\r\nexport const VALIDATING_STATUS = \"VALIDATING_STATUS\";\r\n\r\nexport const SET_INACTIVE = \"SET_INACTIVE\";\r\n\r\nexport const SET_ACTIVE = \"SET_ACTIVE\";\r\n\r\nexport const SERIAL_NUMBER = 4815162342;\r\n\r\nexport const IDLE_SCREEN_TIME = 5000;\r\n\r\nexport const LOCKING_TIME = 3000;\r\n\r\nexport const INPUT_SUBMIT_TIME = 1200;\r\n","import * as t from \"../../constants/constants\";\r\nimport { LOCKING_TIME } from \"../../constants/constants\";\r\n\r\nexport const setInactive = () => ({\r\n  type: t.SET_INACTIVE,\r\n});\r\n\r\nexport const setActive = () => ({\r\n  type: t.SET_ACTIVE,\r\n});\r\n\r\nexport const setLocked = () => ({\r\n  type: t.LOCKED_STATUS,\r\n});\r\n\r\nexport function setLockedAsync() {\r\n  return (dispatch) => {\r\n    setTimeout(function () {\r\n      dispatch(setLocked());\r\n    }, LOCKING_TIME);\r\n  };\r\n}\r\n\r\nexport const setUnLocked = () => ({\r\n  type: t.UNLOCKED_STATUS,\r\n});\r\n\r\nexport function setAsyncUnLocked() {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(setUnLocked());\r\n    }, LOCKING_TIME);\r\n  };\r\n}\r\n\r\nexport const setError = () => ({\r\n  type: t.ERROR_STATUS,\r\n});\r\n\r\nexport const setReady = () => ({\r\n  type: t.READY_STATUS,\r\n});\r\n\r\nexport const setLocking = () => ({\r\n  type: t.LOCKING_STATUS,\r\n});\r\n\r\nexport const preventType = () => ({\r\n  type: t.PREVENT_TYPE,\r\n});\r\n\r\nexport function setAsyncLocking() {\r\n  return (dispatch) => {\r\n    dispatch(setLocking());\r\n    setTimeout(() => {\r\n      dispatch(setLocked());\r\n    }, LOCKING_TIME);\r\n  };\r\n}\r\n\r\nexport const setTEST = () => ({\r\n  type: t.TEST,\r\n});\r\n\r\nexport const setUnLocking = () => ({\r\n  type: t.UNLOCKING_STATUS,\r\n});\r\n\r\nexport const setService = () => ({\r\n  type: t.SERVICE_STATUS,\r\n});\r\n\r\nexport const setValidating = () => ({\r\n  type: t.VALIDATING_STATUS,\r\n});\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"../Button/Button\";\r\nimport Screen from \"../Screen/Screen\";\r\nimport {\r\n  IDLE_SCREEN_TIME,\r\n  INPUT_SUBMIT_TIME,\r\n  LOCKING_TIME,\r\n  SERIAL_NUMBER,\r\n} from \"../../constants/constants\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  preventType,\r\n  setActive,\r\n  setAsyncLocking,\r\n  setAsyncUnLocked,\r\n  setError,\r\n  setInactive,\r\n  setService,\r\n  setUnLocking,\r\n} from \"../../redux/actions/actions\";\r\nimport { DecrptPass, EncriptPass } from \"../../auth/auth\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst Buttons = [\r\n  { val: 7 },\r\n  { val: 8, icon: 1 },\r\n  { val: 9 },\r\n  { val: 4, icon: 1 },\r\n  { val: 5 },\r\n  { val: 6, icon: 1 },\r\n  { val: 1 },\r\n  { val: 2, icon: 1 },\r\n  { val: 3 },\r\n  { val: \"*\", icon: \"A\" },\r\n  { val: 0 },\r\n  { val: \"L\", icon: \"B\" },\r\n];\r\n\r\nconst BoxContainer = ({ active, status, locked, service_mode, locking }) => {\r\n  let [boxState, setBoxState] = useState([]);\r\n  let [submit, setSubmit] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const lockTimer = useRef(\"\");\r\n  const idleTimer = useRef(\"\");\r\n\r\n  //locking part\r\n  useEffect(() => {\r\n    if (boxState?.length > 5 && submit && !service_mode) {\r\n      //set logic for locking\r\n      dispatch(setAsyncLocking());\r\n      const hash = EncriptPass(boxState);\r\n      //password expires after two days?\r\n      Cookies.set(process.env.REACT_APP_COOKIE, hash, { expires: 2 });\r\n      setBoxState([]);\r\n      setSubmit(false);\r\n    }\r\n\r\n    return () => {\r\n      if (lockTimer.current) {\r\n        clearTimeout(lockTimer.current);\r\n      }\r\n    };\r\n  }, [boxState, submit]);\r\n\r\n  //Unlocking part and control idle process\r\n  useEffect(() => {\r\n    if (boxState?.length > 5 && !service_mode) {\r\n      let isLocked;\r\n      try {\r\n        isLocked = Cookies.get(process.env.REACT_APP_COOKIE);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      if (isLocked) {\r\n        const decrypt = DecrptPass(isLocked);\r\n        const currentPassword = JSON.stringify(boxState);\r\n        const stringDecrypt = JSON.stringify(decrypt);\r\n        setTimeout(() => {\r\n          dispatch(setUnLocking());\r\n          if (currentPassword === process.env.REACT_APP_MASTER_RESET) {\r\n            //service mode\r\n            resetBoxState();\r\n            dispatch(setService());\r\n          } else if (currentPassword === stringDecrypt) {\r\n            resetBoxState();\r\n            Cookies.remove(process.env.REACT_APP_COOKIE);\r\n            dispatch(setAsyncUnLocked());\r\n          } else {\r\n            dispatch(setError());\r\n            resetBoxState();\r\n          }\r\n        }, INPUT_SUBMIT_TIME);\r\n      }\r\n    }\r\n\r\n    idleTimer.current = setTimeout(() => {\r\n      dispatch(setInactive());\r\n    }, IDLE_SCREEN_TIME);\r\n  }, [boxState]);\r\n\r\n  useEffect(() => {\r\n    if (service_mode && boxState?.length > 1 && submit) {\r\n      let fixedVal = boxState.join();\r\n      fixedVal = fixedVal.replace(/,/g, \"\");\r\n      fetch(\r\n        `https://9w4qucosgf.execute-api.eu-central-1.amazonaws.com/default/CR-JS_team_M02a?code=${fixedVal}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data?.sn === SERIAL_NUMBER) {\r\n            Cookies.remove(process.env.REACT_APP_COOKIE);\r\n            resetBoxState();\r\n            dispatch(setAsyncUnLocked());\r\n          } else {\r\n            resetBoxState();\r\n            dispatch(setError());\r\n          }\r\n        });\r\n    }\r\n\r\n    if (service_mode) {\r\n      setInputTimer();\r\n    }\r\n    return () => {\r\n      clearLockTimer();\r\n    };\r\n  }, [service_mode, boxState, submit]);\r\n\r\n  const handleClick = (value) => {\r\n    clearIdleTimer();\r\n    clearLockTimer();\r\n    if (boxState?.length > 5 && !service_mode) {\r\n      return;\r\n    }\r\n\r\n    if (service_mode && boxState?.length > 15) {\r\n      return;\r\n    }\r\n\r\n    if (service_mode) {\r\n      setInputTimer();\r\n    }\r\n\r\n    if (!active) {\r\n      dispatch(setActive());\r\n    }\r\n\r\n    setBoxState((prevState) => [...prevState, value]);\r\n  };\r\n\r\n  const handleLock = () => {\r\n    if (boxState?.length > 5 && !service_mode) {\r\n      dispatch(preventType());\r\n    }\r\n    clearIdleTimer();\r\n    setInputTimer();\r\n  };\r\n\r\n  const resetBoxState = () => {\r\n    setBoxState((prevState) => []);\r\n  };\r\n\r\n  const clearLockTimer = () => {\r\n    clearTimeout(lockTimer.current);\r\n    setSubmit(false);\r\n  };\r\n\r\n  const clearIdleTimer = () => {\r\n    clearTimeout(idleTimer.current);\r\n  };\r\n\r\n  const setInputTimer = () => {\r\n    lockTimer.current = setTimeout(() => {\r\n      setSubmit(true);\r\n    }, INPUT_SUBMIT_TIME);\r\n  };\r\n\r\n  return (\r\n    <div className=\"safe-container\">\r\n      <Screen\r\n        message={boxState.length < 1 ? status : boxState}\r\n        status={locked}\r\n        active={active}\r\n      />\r\n      <div className=\"btn-box\">\r\n        {Buttons.map((btn, i) => (\r\n          <Button\r\n            value={btn.val}\r\n            key={i + `_key`}\r\n            icon={btn?.icon}\r\n            handleClick={handleClick}\r\n            handleLock={handleLock}\r\n            service_mode={service_mode}\r\n            locking={locking}\r\n            locked={locked}\r\n          />\r\n        ))}\r\n      </div>\r\n      <SerialNumber />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SerialNumber = () => {\r\n  return <div>S/N : {SERIAL_NUMBER}</div>;\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { active, status, locked, service_mode, locking } = state.box;\r\n  return { active, status, locked, service_mode, locking };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(BoxContainer);\r\n","import React from \"react\";\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nexport const EncriptPass = (password) => {\r\n  // Encrypt\r\n  var ciphertext = CryptoJS.AES.encrypt(\r\n    JSON.stringify(password),\r\n    process.env.REACT_APP_APP_SALT\r\n  ).toString();\r\n\r\n  return ciphertext;\r\n};\r\n\r\nexport const DecrptPass = (password) => {\r\n  // Decrypt\r\n  var bytes = CryptoJS.AES.decrypt(password, process.env.REACT_APP_APP_SALT);\r\n  var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n\r\n  return decryptedData;\r\n};\r\n","import \"./App.css\";\r\nimport BoxContainer from \"./components/Box/Box\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        SAFE DEPOSIT BOX\r\n        <BoxContainer />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  ERROR_STATUS,\r\n  LOCKED_STATUS,\r\n  LOCKING_STATUS,\r\n  READY_STATUS,\r\n  SERVICE_STATUS,\r\n  SET_ACTIVE,\r\n  SET_INACTIVE,\r\n  UNLOCKED_STATUS,\r\n  UNLOCKING_STATUS,\r\n  VALIDATING_STATUS,\r\n  TEST,\r\n  PREVENT_TYPE,\r\n} from \"../../constants/constants\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nlet isLocked;\r\ntry {\r\n  isLocked = Cookies.get(process.env.REACT_APP_COOKIE);\r\n} catch (e) {\r\n  console.log(e);\r\n}\r\n\r\nconst initialState = {\r\n  active: true,\r\n  status: \"Ready\",\r\n  locked: isLocked ? true : false,\r\n  locking: false,\r\n  service_mode: false,\r\n};\r\n\r\nexport function box(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOCKED_STATUS:\r\n      return { ...state, locked: true, status: \"\", locking: false };\r\n\r\n    case UNLOCKED_STATUS:\r\n      return {\r\n        ...state,\r\n        locked: false,\r\n        status: \"Ready\",\r\n        service_mode: false,\r\n        locking: false,\r\n      };\r\n\r\n    case ERROR_STATUS:\r\n      return { ...state, status: \"Error\", locking: false };\r\n\r\n    case PREVENT_TYPE:\r\n      return { ...state, locking: true };\r\n\r\n    case READY_STATUS:\r\n      return { ...state, status: \"Ready\" };\r\n\r\n    case LOCKING_STATUS:\r\n      return { ...state, status: \"Locking\", locking: true };\r\n    case UNLOCKING_STATUS:\r\n      return { ...state, status: \"Unlocking\", locking: true };\r\n\r\n    case SERVICE_STATUS:\r\n      return {\r\n        ...state,\r\n        status: \"Service\",\r\n        service_mode: true,\r\n        locking: false,\r\n      };\r\n    case VALIDATING_STATUS:\r\n      return { ...state, status: \"Validating\" };\r\n    case SET_ACTIVE:\r\n      return { ...state, active: true };\r\n\r\n    case SET_INACTIVE:\r\n      return { ...state, active: false };\r\n    case TEST:\r\n      return { ...state, status: \"TEST\" };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { box } from \"./box\";\r\n\r\nexport default combineReducers({\r\n  box: box,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducer from \"./redux/reducer/reducer\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
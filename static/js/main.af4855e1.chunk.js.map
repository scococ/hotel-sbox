{"version":3,"sources":["components/Button/Button.js","components/Screen/Screen.js","constants/constants.js","redux/actions/actions.js","components/Box/Box.js","auth/auth.js","App.js","redux/reducer/box.js","reportWebVitals.js","redux/reducer/reducer.js","index.js"],"names":["Button","value","icon","handleClick","handleLock","service_mode","locked","locking","className","onClick","Screen","status","message","active","useEffect","LOCKED_STATUS","TEST","UNLOCKED_STATUS","ERROR_STATUS","READY_STATUS","LOCKING_STATUS","UNLOCKING_STATUS","PREVENT_TYPE","SERVICE_STATUS","VALIDATING_STATUS","SET_INACTIVE","SET_ACTIVE","SERIAL_NUMBER","LOCKING_TIME","setLocked","type","t","setAsyncUnLocked","dispatch","setTimeout","setError","setAsyncLocking","Buttons","val","SerialNumber","connect","state","box","useState","boxState","setBoxState","submit","setSubmit","useDispatch","lockTimer","useRef","idleTimer","length","hash","password","CryptoJS","AES","encrypt","JSON","stringify","process","toString","Cookies","set","expires","current","clearTimeout","isLocked","get","e","console","log","decrypt","bytes","parse","enc","Utf8","DecrptPass","currentPassword","stringDecrypt","resetBoxState","remove","fixedVal","join","replace","fetch","then","response","json","data","sn","setInputTimer","clearLockTimer","clearIdleTimer","prevState","map","btn","i","App","Box","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","store","createStore","reducer","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af4855e1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Button = ({\n  value,\n  icon,\n  handleClick,\n  handleLock,\n  service_mode,\n  locked,\n  locking,\n}) => {\n  return (\n    <div\n      className={`btn ${locking ? \"prevent\" : \"\"} `}\n      onClick={() =>\n        value === \"L\"\n          ? service_mode\n            ? handleClick(value)\n            : locked\n            ? null\n            : handleLock()\n          : value === \"*\" && !service_mode\n          ? null\n          : handleClick(value)\n      }\n    >\n      <strong className=\"btn-text\">{value}</strong>\n      {icon && <span className=\"icon-placeholder\">{icon}</span>}\n    </div>\n  );\n};\n\nexport default Button;\n","import React, { useEffect } from \"react\";\n\nconst Screen = ({ status, message, active }) => {\n  useEffect(() => {}, []);\n\n  return (\n    <div className={`screen-bar ${active && \"active\"}`}>\n      <div className=\"status-bar\">{status ? \"Locked\" : \"Unlocked\"}</div>\n      <div className=\"message-bar\">{message}</div>\n    </div>\n  );\n};\n\nexport default Screen;\n","export const LOCKED_STATUS = \"LOCKED_STATUS\";\n\nexport const TEST = \"TEST\";\n\nexport const UNLOCKED_STATUS = \"UNLOCKED_STATUS\";\n\nexport const ERROR_STATUS = \"ERROR_STATUS\";\n\nexport const READY_STATUS = \"READY_STATUS\";\n\nexport const LOCKING_STATUS = \"LOCKING_STATUS\";\n\nexport const UNLOCKING_STATUS = \"UNLOCKING_STATUS\";\n\nexport const PREVENT_TYPE = \"PREVENT_TYPE\";\n\nexport const SERVICE_STATUS = \"SERVICE_STATUS\";\n\nexport const VALIDATING_STATUS = \"VALIDATING_STATUS\";\n\nexport const SET_INACTIVE = \"SET_INACTIVE\";\n\nexport const SET_ACTIVE = \"SET_ACTIVE\";\n\nexport const SERIAL_NUMBER = 4815162342;\n\nexport const IDLE_SCREEN_TIME = 5000;\n\nexport const LOCKING_TIME = 3000;\n\nexport const INPUT_SUBMIT_TIME = 1200;\n","import * as t from \"../../constants/constants\";\nimport { LOCKING_TIME } from \"../../constants/constants\";\n\nexport const setInactive = () => ({\n  type: t.SET_INACTIVE,\n});\n\nexport const setActive = () => ({\n  type: t.SET_ACTIVE,\n});\n\nexport const setLocked = () => ({\n  type: t.LOCKED_STATUS,\n});\n\nexport function setLockedAsync() {\n  return (dispatch) => {\n    setTimeout(function () {\n      dispatch(setLocked());\n    }, LOCKING_TIME);\n  };\n}\n\nexport const setUnLocked = () => ({\n  type: t.UNLOCKED_STATUS,\n});\n\nexport function setAsyncUnLocked() {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(setUnLocked());\n    }, LOCKING_TIME);\n  };\n}\n\nexport const setError = () => ({\n  type: t.ERROR_STATUS,\n});\n\nexport const setReady = () => ({\n  type: t.READY_STATUS,\n});\n\nexport const setLocking = () => ({\n  type: t.LOCKING_STATUS,\n});\n\nexport const preventType = () => ({\n  type: t.PREVENT_TYPE,\n});\n\nexport function setAsyncLocking() {\n  return (dispatch) => {\n    dispatch(setLocking());\n    setTimeout(() => {\n      dispatch(setLocked());\n    }, LOCKING_TIME);\n  };\n}\n\nexport const setTEST = () => ({\n  type: t.TEST,\n});\n\nexport const setUnLocking = () => ({\n  type: t.UNLOCKING_STATUS,\n});\n\nexport const setService = () => ({\n  type: t.SERVICE_STATUS,\n});\n\nexport const setValidating = () => ({\n  type: t.VALIDATING_STATUS,\n});\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"../Button/Button\";\nimport Screen from \"../Screen/Screen\";\nimport {\n  IDLE_SCREEN_TIME,\n  INPUT_SUBMIT_TIME,\n  SERIAL_NUMBER,\n} from \"../../constants/constants\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  preventType,\n  setActive,\n  setAsyncLocking,\n  setAsyncUnLocked,\n  setError,\n  setInactive,\n  setService,\n  setUnLocking,\n} from \"../../redux/actions/actions\";\nimport { DecrptPass, EncriptPass } from \"../../auth/auth\";\nimport Cookies from \"js-cookie\";\n\nconst Buttons = [\n  { val: 7 },\n  { val: 8, icon: 1 },\n  { val: 9 },\n  { val: 4, icon: 1 },\n  { val: 5 },\n  { val: 6, icon: 1 },\n  { val: 1 },\n  { val: 2, icon: 1 },\n  { val: 3 },\n  { val: \"*\", icon: \"A\" },\n  { val: 0 },\n  { val: \"L\", icon: \"B\" },\n];\n\nconst BoxContainer = ({ active, status, locked, service_mode, locking }) => {\n  let [boxState, setBoxState] = useState([]);\n  let [submit, setSubmit] = useState(false);\n  const dispatch = useDispatch();\n  const lockTimer = useRef(\"\");\n  const idleTimer = useRef(\"\");\n\n  //locking part\n  useEffect(() => {\n    if (boxState?.length > 5 && submit && !service_mode) {\n      //set logic for locking\n      dispatch(setAsyncLocking());\n      const hash = EncriptPass(boxState);\n      //password expires after two days?\n      Cookies.set(process.env.REACT_APP_COOKIE, hash, { expires: 2 });\n      setBoxState([]);\n      setSubmit(false);\n    }\n\n    return () => {\n      if (lockTimer.current) {\n        clearTimeout(lockTimer.current);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [boxState, submit]);\n\n  //Unlocking part and control idle process\n  useEffect(() => {\n    if (boxState?.length > 5 && !service_mode) {\n      let isLocked;\n      try {\n        isLocked = Cookies.get(process.env.REACT_APP_COOKIE);\n      } catch (e) {\n        console.log(e);\n      }\n      if (isLocked) {\n        const decrypt = DecrptPass(isLocked);\n        const currentPassword = JSON.stringify(boxState);\n        const stringDecrypt = JSON.stringify(decrypt);\n        setTimeout(() => {\n          dispatch(setUnLocking());\n          if (currentPassword === process.env.REACT_APP_MASTER_RESET) {\n            //service mode\n            resetBoxState();\n            dispatch(setService());\n          } else if (currentPassword === stringDecrypt) {\n            resetBoxState();\n            Cookies.remove(process.env.REACT_APP_COOKIE);\n            dispatch(setAsyncUnLocked());\n          } else {\n            dispatch(setError());\n            resetBoxState();\n          }\n        }, INPUT_SUBMIT_TIME);\n      }\n    }\n\n    idleTimer.current = setTimeout(() => {\n      dispatch(setInactive());\n    }, IDLE_SCREEN_TIME);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [boxState]);\n\n  useEffect(() => {\n    if (service_mode && boxState?.length > 1 && submit) {\n      let fixedVal = boxState.join();\n      fixedVal = fixedVal.replace(/,/g, \"\");\n      fetch(\n        `https://9w4qucosgf.execute-api.eu-central-1.amazonaws.com/default/CR-JS_team_M02a?code=${fixedVal}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          if (data?.sn === SERIAL_NUMBER) {\n            Cookies.remove(process.env.REACT_APP_COOKIE);\n            resetBoxState();\n            dispatch(setAsyncUnLocked());\n          } else {\n            resetBoxState();\n            dispatch(setError());\n          }\n        });\n    }\n\n    if (service_mode) {\n      setInputTimer();\n    }\n    return () => {\n      clearLockTimer();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [service_mode, boxState, submit]);\n\n  const handleClick = (value) => {\n    clearIdleTimer();\n    clearLockTimer();\n    if (boxState?.length > 5 && !service_mode) {\n      return;\n    }\n\n    if (service_mode && boxState?.length > 15) {\n      return;\n    }\n\n    if (service_mode) {\n      setInputTimer();\n    }\n\n    if (!active) {\n      dispatch(setActive());\n    }\n\n    setBoxState((prevState) => [...prevState, value]);\n  };\n\n  const handleLock = () => {\n    if (boxState?.length > 5 && !service_mode) {\n      dispatch(preventType());\n    }\n    clearIdleTimer();\n    setInputTimer();\n  };\n\n  const resetBoxState = () => {\n    setBoxState((prevState) => []);\n  };\n\n  const clearLockTimer = () => {\n    clearTimeout(lockTimer.current);\n    setSubmit(false);\n  };\n\n  const clearIdleTimer = () => {\n    clearTimeout(idleTimer.current);\n  };\n\n  const setInputTimer = () => {\n    lockTimer.current = setTimeout(() => {\n      setSubmit(true);\n    }, INPUT_SUBMIT_TIME);\n  };\n\n  return (\n    <div className=\"safe-container\">\n      <Screen\n        message={boxState.length < 1 ? status : boxState}\n        status={locked}\n        active={active}\n      />\n      <div className=\"btn-box\">\n        {Buttons.map((btn, i) => (\n          <Button\n            value={btn.val}\n            key={i + `_key`}\n            icon={btn?.icon}\n            handleClick={handleClick}\n            handleLock={handleLock}\n            service_mode={service_mode}\n            locking={locking}\n            locked={locked}\n          />\n        ))}\n      </div>\n      <SerialNumber />\n    </div>\n  );\n};\n\nconst SerialNumber = () => {\n  return <div>S/N : {SERIAL_NUMBER}</div>;\n};\n\nfunction mapStateToProps(state) {\n  const { active, status, locked, service_mode, locking } = state.box;\n  return { active, status, locked, service_mode, locking };\n}\n\nexport default connect(mapStateToProps, null)(BoxContainer);\n","import React from \"react\";\nimport CryptoJS from \"crypto-js\";\n\nexport const EncriptPass = (password) => {\n  // Encrypt\n  var ciphertext = CryptoJS.AES.encrypt(\n    JSON.stringify(password),\n    process.env.REACT_APP_APP_SALT\n  ).toString();\n\n  return ciphertext;\n};\n\nexport const DecrptPass = (password) => {\n  // Decrypt\n  var bytes = CryptoJS.AES.decrypt(password, process.env.REACT_APP_APP_SALT);\n  var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n\n  return decryptedData;\n};\n","import \"./App.css\";\nimport BoxContainer from \"./components/Box/Box\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        SAFE DEPOSIT BOX\n        <BoxContainer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  ERROR_STATUS,\n  LOCKED_STATUS,\n  LOCKING_STATUS,\n  READY_STATUS,\n  SERVICE_STATUS,\n  SET_ACTIVE,\n  SET_INACTIVE,\n  UNLOCKED_STATUS,\n  UNLOCKING_STATUS,\n  VALIDATING_STATUS,\n  TEST,\n  PREVENT_TYPE,\n} from \"../../constants/constants\";\nimport Cookies from \"js-cookie\";\n\nlet isLocked;\ntry {\n  isLocked = Cookies.get(process.env.REACT_APP_COOKIE);\n} catch (e) {\n  console.log(e);\n}\n\nconst initialState = {\n  active: true,\n  status: \"Ready\",\n  locked: isLocked ? true : false,\n  locking: false,\n  service_mode: false,\n};\n\nexport function box(state = initialState, action) {\n  switch (action.type) {\n    case LOCKED_STATUS:\n      return { ...state, locked: true, status: \"\", locking: false };\n\n    case UNLOCKED_STATUS:\n      return {\n        ...state,\n        locked: false,\n        status: \"Ready\",\n        service_mode: false,\n        locking: false,\n      };\n\n    case ERROR_STATUS:\n      return { ...state, status: \"Error\", locking: false };\n\n    case PREVENT_TYPE:\n      return { ...state, locking: true };\n\n    case READY_STATUS:\n      return { ...state, status: \"Ready\" };\n\n    case LOCKING_STATUS:\n      return { ...state, status: \"Locking\", locking: true };\n    case UNLOCKING_STATUS:\n      return { ...state, status: \"Unlocking\", locking: true };\n\n    case SERVICE_STATUS:\n      return {\n        ...state,\n        status: \"Service\",\n        service_mode: true,\n        locking: false,\n      };\n    case VALIDATING_STATUS:\n      return { ...state, status: \"Validating\" };\n    case SET_ACTIVE:\n      return { ...state, active: true };\n\n    case SET_INACTIVE:\n      return { ...state, active: false };\n    case TEST:\n      return { ...state, status: \"TEST\" };\n    default:\n      return state;\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\n\nimport { box } from \"./box\";\n\nexport default combineReducers({\n  box: box,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducer from \"./redux/reducer/reducer\";\n\nconst store = createStore(reducer, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}